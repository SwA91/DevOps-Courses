apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-deployment
  labels:
    app: backend
# PODs config
spec:
  replicas: 2
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
      - name: backend
        image: klerith/k8s-teslo-backend:1.1.0
        ports:
        - containerPort: 3000
        env:
        - name: APP_VERSION
          value: "1.1.0"

        - name: PORT
          value: "3000"

        - name: STAGE
          value: "prod"

        - name: DB_NAME
          valueFrom: 
            configMapKeyRef:
              name: postgres-config
              key: DB_NAME

        - name: DB_HOST
          valueFrom: 
            configMapKeyRef:
              name: postgres-config
              key: DB_HOST

        - name: DB_PORT
          valueFrom:
            configMapKeyRef:
              name: postgres-config
              key: DB_PORT

        - name: DB_USERNAME
          valueFrom: 
            configMapKeyRef:
              name: postgres-secrets
              key: DB_USER

        - name: DB_PASSWORD
          valueFrom: 
            configMapKeyRef:
              name: postgres-secrets
              key: DB_PASSWORD
              
        - name: JWT_SECRET
          valueFrom: 
            configMapKeyRef:
              name: backend-secrets
              key: JWT_SECRET
       
# indica que se empieza un nuevo archivo YML
---
apiVersion: v1
kind: Service
metadata:
  name: backend-service
spec:
  type: NodePort # permite comunicacion externa
  selector:
    app: backend
  ports:
    - protocol: TCP
      port: 3000 # cualquier puerto para escuchas externas
      targetPort: 3000
      nodePort: 30300
